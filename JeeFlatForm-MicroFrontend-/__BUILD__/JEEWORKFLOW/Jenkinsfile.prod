pipeline {
    environment {
        REGISTRY_HOST = "registry.jee.vn"
        REGISTRY_PUBLISHER = "dps"
        REGISTRY_CRED = "registry"
        PROJECT_NAME = "mfeworkflow-backend"
        DOMAIN = "jee.vn"
        SUBDOMAIN = "workflow-mfe"
        STACK_NAME = "mfe"
        REMOTE_URL = "https://jenkins.jee.vn/view/microfrontend/job/REMOTE%20jeeworkflow%20backend%20mfe/build"
        REMOTE_BUILD_TOKEN = "URvfMrgfPc3TE55mTGMYc2XNffFvgYgABNwLLtesQVRdg4Y2hHypV5mKGhPqMG2F"
        NODE_ENV = "production"
        PROJECT_BUILD = 'jeeworkflow'
        service = ""
    }
    agent any
    stages {
        stage('Clone repository') {
            steps {
                script {
                    checkout scm
                }
            }
        }
        stage('Build image') {
            steps {
                script {
                    service = docker.build("${REGISTRY_HOST}/${REGISTRY_PUBLISHER}/${PROJECT_NAME}:latest", "--build-arg NODE_ENV=${NODE_ENV} --build-arg PROJECT_BUILD=${PROJECT_BUILD} -f Dockerfile .")
                }
            }
        }
        stage('Push image') {
            steps {
                script {
                    docker.withRegistry("https://${REGISTRY_HOST}", REGISTRY_CRED) {
                        service.push("latest")
                    }
                }
            }
        }
        stage('Call Remote') {
            steps {
                script {
                    withCredentials([usernamePassword(credentialsId: 'remotecall', usernameVariable: "USERNAME", passwordVariable: "PASSWORD")]) {
                        sh """
                            curl -u ${USERNAME}:${PASSWORD} -X POST \
                            -H "Content-Type:application/json" \
                            ${REMOTE_URL}?token=${REMOTE_BUILD_TOKEN}
                        """
                    }
                }
            }
        }
        stage('Cleaning up') {
            steps{
                sh "docker image prune -f"
            }
        }
    }
}